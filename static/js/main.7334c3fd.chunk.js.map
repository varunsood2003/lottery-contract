{"version":3,"sources":["web3.js","lottery.js","App.js","reportWebVitals.js","index.js"],"names":["window","ethereum","request","method","web3","Web3","eth","Contract","constant","inputs","name","outputs","type","payable","stateMutability","App","state","manager","players","balance","value","message","onSubmit","event","a","preventDefault","getAccounts","accounts","setState","lottery","methods","enter","send","from","utils","toWei","onClick","pickWinner","call","getPlayers","getBalance","options","address","this","className","length","fromWei","onChange","target","class","xmlns","viewBox","width","height","fill","d","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7334c3fd.chunk.js","sourcesContent":["import Web3 from \"web3\";\n \nwindow.ethereum.request({ method: \"eth_requestAccounts\" });\n \nconst web3 = new Web3(window.ethereum);\n \nexport default web3;\n","import web3 from \"./web3\";\nconst address = \"0x3d03f311B202de7B9Dc7Db7A8F5dF90ff713F162\";\nconst abi = [\n  {\n    constant: true,\n    inputs: [],\n    name: \"manager\",\n    outputs: [{ name: \"\", type: \"address\" }],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    constant: false,\n    inputs: [],\n    name: \"pickWinner\",\n    outputs: [],\n    payable: false,\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: \"getPlayers\",\n    outputs: [{ name: \"\", type: \"address[]\" }],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    constant: false,\n    inputs: [],\n    name: \"enter\",\n    outputs: [],\n    payable: true,\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    constant: true,\n    inputs: [{ name: \"\", type: \"uint256\" }],\n    name: \"players\",\n    outputs: [{ name: \"\", type: \"address\" }],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    payable: false,\n    stateMutability: \"nonpayable\",\n    type: \"constructor\",\n  },\n];\nexport default new web3.eth.Contract(abi, address); ","import React from \"react\";\nimport web3 from \"./web3\";\nimport lottery from \"./lottery\";\n\nclass App extends React.Component {\n  state = {\n    manager: \"\",\n    players: [],\n    balance: \"\",\n    value: \"\",\n    message: \"\",\n  };\n  async componentDidMount() {\n    const manager = await lottery.methods.manager().call();\n    const players = await lottery.methods.getPlayers().call();\n    const balance = await web3.eth.getBalance(lottery.options.address);\n\n    this.setState({ manager, players, balance });\n  }\n\n  onSubmit = async (event) => {\n    event.preventDefault();\n\n    const accounts = await web3.eth.getAccounts();\n\n    this.setState({ message: \"Waiting on transaction success...\" });\n\n    await lottery.methods.enter().send({\n      from: accounts[0],\n      value: web3.utils.toWei(this.state.value, \"ether\"),\n    });\n\n    this.setState({ message: \"You have been entered!\" });\n  };\n  onClick = async () => {\n    const accounts = await web3.eth.getAccounts();\n\n    this.setState({ message: \"Waiting on transaction success...\" });\n\n    await lottery.methods.pickWinner().send({\n      from: accounts[0],\n    });\n\n    this.setState({ message: \"A winner has been picked!\" });\n  };\n\n  render() {\n    return (\n      <div>\n        <h1>Lottery Contract</h1>\n        <p className=\"top\">\n          This contract is managed by {this.state.manager}. There are currently{\" \"}\n          {this.state.players.length} people entered, competing to win{\" \"}\n          {web3.utils.fromWei(this.state.balance, \"ether\")} ether!\n        </p>\n\n        <hr />\n        <form onSubmit={this.onSubmit}>\n          <h2>Want to try your luck?</h2>\n          <div>\n            <label>Amount of ether to enter</label>\n            <input\n              value={this.state.value}\n              onChange={(event) => this.setState({ value: event.target.value })}\n            />\n          </div>\n          <button className=\"send\">\n                  <div class=\"svg-wrapper-1\">\n                    <div class=\"svg-wrapper\">\n                      <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"24\" height=\"24\">\n                        <path fill=\"none\" d=\"M0 0h24v24H0z\"></path>\n                        <path fill=\"currentColor\" d=\"M1.946 9.315c-.522-.174-.527-.455.01-.634l19.087-6.362c.529-.176.832.12.684.638l-5.454 19.086c-.15.529-.455.547-.679.045L12 14l6-8-8 6-8.054-2.685z\"></path>\n                      </svg>\n                    </div>\n                  </div>\n                  <span>Send</span>\n          </button>\n        </form>\n\n        <hr />\n\n        <h2>Ready to pick a winner?</h2>\n        <button className=\"pick\" onClick={this.onClick} >Pick a winner!</button>\n\n        <hr />\n        <h3>{this.state.message}</h3>\n      </div>\n    );\n  }\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}